#+LATEX_COMPILER: xelatex
#+LATEX_HEADER: \usepackage{ctex, mathtools, amsthm, booktabs, physics}

* 栈(Stack)、队列(Queue)和向量(Vector)

** 单链表, 双向链表, 环形链表, 带哨兵节点的链表

** 栈的基本概念和性质

** 栈 ADT 及其顺序、链接实现

** 栈的应用

** 栈与递归

** 队列的基本概念和性质

** 队列 ADT 及其顺序、链接实现

** 队列的应用

** 向量基本概念和性质

** 向量 ADT 及其顺序、链接实现

* 树

** 树的基本概念和术语

** 树的前序, 中序, 后序, 层次序遍历

** 二叉树及其性质

** 普通树与二叉树的转换

** 树的存储结构, 标准形式

** 完全树(Complete tree)的数组形式存储

** 树的应用, Huffman 树的定义与应用

* 查找(Search)

** 查找的基本概念

** 对线性关系结构的查找

*** 顺序查找

*** 二分查找

** Hash 查找法

*** 常见的 Hash 函数

*** 直接定址法

*** 随机数法

*** Hash 冲突的概念, 解决冲突的方法

**** 开散列方法/拉链法

**** 闭散列方法/开址定址法

**** 二次聚集现象

** BST 树定义, 性质, ADT 及其实现

** BST 树查找, 插入, 删除算法

** 平衡树(AVL)的定义, 性质, ADT 及其实现

** 平衡树查找, 插入算法, 平衡因子的概念

** 优先队列与堆

*** 堆的定义

*** 堆的生成

*** 调整算法

** 范围查询

* 排序

** 排序基本概念

** 插入排序

** 希尔排序

** 选择排序

** 快速排序

** 合并排序

** 基数排序

** 其他排序算法基本思想, 算法代码及基本的时间复杂度分析

* 图

** 图的基本概念

** 图的存储结构

*** 邻接矩阵

*** 邻接表

** 图的遍历

*** 广度度优先遍历

*** 深度优先遍历

** 最小生成树基本概念

** Prim 算法

** Kruskal 算法

** 最短路径问题

*** 广度优先遍历算法

*** Dijkstra 算法

*** Floyd 算法

** 拓扑排序

